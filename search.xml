<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[彻底解决Ubuntu 14.04 重启后DNS配置丢失的问题]]></title>
    <url>%2F2015%2F11%2F06%2F%E5%BD%BB%E5%BA%95%E8%A7%A3%E5%86%B3ubuntu-14-04-%E9%87%8D%E5%90%AF%E5%90%8Edns%E9%85%8D%E7%BD%AE%E4%B8%A2%E5%A4%B1%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[方法1：12sudo vim /etc/network/interfacesdns-nameservers 8.8.8.8 方法2：（这个文件默认是空的）123sudo vim /etc/resolvconf/resolv.conf.d/basenameserver 8.8.8.8nameserver 8.8.4.4 如果有多个DNS就一行一个修改好保存，然后执行 12resolvconf -usudo vim /etc/resolvconf/resolv.conf.d/head 打开里面显示如下再看/etc/resolv.conf，最下面就多了2行： 12345cat /etc/resolv.conf# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTENnameserver 8.8.8.8nameserver 8.8.4.4 现在此DNS已经生效了，无需重启，当然重启也不会丢失]]></content>
      <tags>
        <tag>dns</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一台服务器启动多个mysql实例]]></title>
    <url>%2F2015%2F11%2F06%2F%E4%B8%80%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%AF%E5%8A%A8%E5%A4%9A%E4%B8%AAmysql%E5%AE%9E%E4%BE%8B%2F</url>
    <content type="text"><![CDATA[配置文件12345678910111213141516171819202122232425262728[root@server]# cat /etc/my.cnf# For advice on how to change settings please see# http://dev.mysql.com/doc/refman/5.6/en/server-configuration-defaults.html[mysqld_multi]mysqld = /usr/bin/mysqld_safemysqladmin = /usr/bin/mysqladminuser = root[mysqld1]lower_case_table_names=0port =3306datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.socksymbolic-links=0sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLESpid-file=/var/run/mysqld/mysqld.pidlog-error=/var/log/mysqld.log[mysqld2]lower_case_table_names=1port=3307datadir=/var/lib/mysql3307socket=/var/lib/mysql3307/mysql.socksymbolic-links=0sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLESpid-file=/var/run/mysqld/mysqld3307.pidlog-error=/var/log/mysqld3307.log mysql的启动停止和连接：启动 mysqld_multi --defaults-file=/etc/my.cnf start 1,2 停止 mysqld_multi --defaults-file=/etc/my.cnf stop 1,2 连接 mysql -P 3306 -h 127.0.0.1 -u root -p mysql -P 3307 -h 127.0.0.1 -u root -p]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP如何打开mb_string]]></title>
    <url>%2F2015%2F11%2F06%2Fcentos%E7%8E%AF%E5%A2%83%E4%B8%8Bphp%E5%BC%80%E5%90%AFmb-string%2F</url>
    <content type="text"><![CDATA[mbstring 处理多字节字符集转换时比较常用 执行 yum install php-mbstring 修改php.ini echo &#39;extension=mbstring.so&#39; &gt;&gt;/etc/php.ini #根据php安装目录而定 重启web service，如果是apache: service httpd restart]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vsftpd主、被动模式区别及iptables配置规则]]></title>
    <url>%2F2015%2F11%2F05%2Fvsftpd%E4%B8%BB%E3%80%81%E8%A2%AB%E5%8A%A8%E6%A8%A1%E5%BC%8F%E5%8C%BA%E5%88%AB%E5%8F%8Aiptables%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[主动与被动模式区别FTP的数据连接和控制连接的方向一般是相反的，即服务器向客户端发起一个用于数据传输的连接。连接的端口是由服务器端和客户端协商确定的，这就是vsftpd的主动模式（port mod）。FTP协议的这个特征对iptables防火墙和NAT的配置增加了很多困难。在FTP被动模式 (passive mod)下，数据连接是由客户程序发起的，和主动模式相反。 主动与被动模式iptables的配置主动模式下： 客户端连接 TCP/21，服务器通过 TCP/20 连接客户端的随机端口―这种情况下，通过状态防火墙可以解决 iptables -A INPUT -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT 或者如下： 12iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT iptables -A INPUT -p tcp -m multiport --dport 20,21 -m state --state NEW -j ACCEPT 被动模式下： 客户端连接 TCP/21，客户再通过其他端口连接服务器的随机端口，如果传送卡住，是因为服务器在被动模式下没有打开临时端口让客户端连过来。 在/etc/vsftpd/vsftpd.conf中添加 123pasv_enable=YES pasv_min_port=2222 pasv_max_port=2225 iptables中开放这段端口 123iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPTiptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT iptables -A INPUT -p tcp --dport 2222:2225 -j ACCEPT]]></content>
      <tags>
        <tag>ftp</tag>
        <tag>iptables</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vsftpd配置说明]]></title>
    <url>%2F2015%2F11%2F04%2Fvsftpd%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E%2F</url>
    <content type="text"><![CDATA[vsftpd服务安装完毕后，主要修改一个配置文件/etc/vsftpd/vsftpd.conf，就可以简单实现ftp服务。 介绍几个配置项： anonymous_enable=YES/NO （YES） 控制是否允许匿名用户登入，YES 为允许匿名登入，NO 为不允许。默认值为YES。 write_enable=YES/NO （YES） 是否允许登陆用户有写权限。属于全局设置，默认值为YES。 local_enable=YES/NO （YES） 控制是否允许本地用户登入，YES 为允许本地用户登入，NO为不允许。默认值为YES。 local_root=/home/username 当本地用户登入时，将被更换到定义的目录下。默认值为各用户的家目录。 write_enable=YES/NO （YES） 是否允许登陆用户有写权限。属于全局设置，默认值为YES。 FTP有两种工作方式：PORT FTP（主动模式）和PASV FTP（被动模式） listen_port=21 设置FTP服务器建立连接所监听的端口，默认值为21。 connect_from_port_20=YES/NO 指定FTP使用20端口进行数据传输，默认值为YES。 ftp_data_port=20 设置在PORT方式下，FTP数据连接使用的端口，默认值为20。 pasv_enable=YES/NO （YES） 若设置为YES，则使用PASV工作模式；若设置为NO，则使用PORT模式。默认值为YES，即使用PASV工作模式。 pasv_max_port=0 在PASV工作模式下，数据连接可以使用的端口范围的最大端口，0 表示任意端口。默认值为0。 pasv_min_port=0 在PASV工作模式下，数据连接可以使用的端口范围的最小端口，0 表示任意端口。默认值为0。]]></content>
      <tags>
        <tag>ftp</tag>
      </tags>
  </entry>
</search>
